;(function (modules) {
  // 模块的缓存
  var installedModules = {}

  // 自己定义的require方法
  function __webpack_require__(moduleId) {
    // 检查是否有缓存，有就直接返回
    if (installedModules[moduleId]) {
      return installedModules[moduleId].exports
    }
    // 创建一个缓存，并将加载的模块放入
    var module = (installedModules[moduleId] = {
      i: moduleId, // 模块id
      l: false, // 是否已经加载
      exports: {},
    })

    // 执行加载模块的方法
    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__)

    // 标记模块已经加载过了
    module.l = true

    // 将模块的内容返回
    return module.exports
  }
  return __webpack_require__((__webpack_require__.s = '<%-entryId%>'))
})({
  <%for(let key in modules) {%>
  <%-key%>: (function (module, exports, __webpack_require__) {
    eval(`<%-modules[key]%>`)
  })
  <%}%>
})